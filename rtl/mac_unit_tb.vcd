$date
	Mon Aug 11 16:39:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mac_unit_tb $end
$var wire 8 ! weight_out [7:0] $end
$var wire 24 " partial_sum_out [23:0] $end
$var wire 8 # activation_out [7:0] $end
$var reg 8 $ activation_in [7:0] $end
$var reg 1 % clk $end
$var reg 1 & col_en $end
$var reg 1 ' en $end
$var reg 24 ( partial_sum_in [23:0] $end
$var reg 1 ) row_en $end
$var reg 1 * rst $end
$var reg 8 + weight_in [7:0] $end
$scope module dut $end
$var wire 8 , activation_in [7:0] $end
$var wire 1 % clk $end
$var wire 1 & col_en $end
$var wire 1 ' en $end
$var wire 1 - local_en $end
$var wire 24 . partial_sum_in [23:0] $end
$var wire 1 ) row_en $end
$var wire 1 * rst $end
$var wire 1 / skip_mac $end
$var wire 8 0 weight_in [7:0] $end
$var wire 1 1 weight_is_zero $end
$var wire 24 2 next_psum [23:0] $end
$var wire 24 3 mult_prod [23:0] $end
$var wire 24 4 mult_b_ext [23:0] $end
$var wire 8 5 mult_b [7:0] $end
$var wire 24 6 mult_a_ext [23:0] $end
$var wire 8 7 mult_a [7:0] $end
$var wire 1 8 activation_is_zero $end
$var reg 8 9 activation_out [7:0] $end
$var reg 8 : activation_reg [7:0] $end
$var reg 24 ; partial_sum_out [23:0] $end
$var reg 8 < weight_out [7:0] $end
$var reg 8 = weight_reg [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
bx :
bx 9
x8
b0 7
bx 6
b0 5
bx 4
bx 3
bx 2
x1
b0 0
x/
b0 .
0-
b0 ,
b0 +
1*
0)
b0 (
1'
0&
0%
b0 $
bx #
bx "
bx !
$end
#5000
b0 2
b0 3
1/
b0 "
b0 ;
b0 !
b0 <
b0 #
b0 9
11
b0 4
b0 =
18
b0 6
b0 :
1%
#10000
0%
#15000
1%
#20000
b1010 2
1-
0%
b1010 (
b1010 .
b100 +
b100 0
b11 $
b11 ,
1&
1)
0*
#25000
b10110 2
b100 5
0/
b11 7
b1010 "
b1010 ;
b100 !
b100 <
b11 #
b11 9
01
b1100 3
b100 4
b100 =
08
b11 6
b11 :
1%
#30000
b111110 2
0%
b110010 (
b110010 .
b101 +
b101 0
b0 $
b0 ,
#35000
b101 5
1/
b0 7
b110010 2
b111110 "
b111110 ;
b101 !
b101 <
b0 #
b0 9
b101 4
b101 =
18
b0 3
b0 6
b0 :
1%
#40000
b0 5
b111110 2
0-
0%
b1100100 (
b1100100 .
b11 +
b11 0
b10 $
b10 ,
0'
#45000
b11 !
b11 <
b10 #
b10 9
1%
#50000
0%
